import numpy as np
PI = np.pi

class experimentalData:

    def __init__(self, amps, pitches, angles):
        self.nb_gratings = np.shape(amps)[1]
        self.nb_stretch = np.shape(amps)[0]
        self.phase = np.pi / self.nb_gratings
        self.amps, self.pitches, self.angles = amps, pitches, angles
        pass

PI = np.pi

amp8G = np.array([[0.427947, 0.350812, 0.505739, 0.305864, 0.679745, 0.578136, 0.554883, 1],
                [0.414172, 0.460252, 0.513327, 0.495240, 0.771715, 0.511313, 0.618458, 1],
                [0.513523, 0.434903, 0.828801, 0.390097, 0.892500, 0.487479, 0.690805, 1],
                [0.549956, 0.425569, 0.509538, 0.435393, 1, 0.419731, 0.822757, 0.901456],
                [0.568348, 0.457213, 0.394343, 0.376277, 1, 0.327728, 0.915975, 0.718308],
                [0.696373, 0.607797, 0.667442, 0.549605, 1, 0.567812, 0.893165, 0.980499],
                [0.596690, 0.771279, 0.624219, 0.767799, 1.086060, 0.555316, 1, 0.950397]])

p8G = np.array([[0.957, 0.961, 0.961, 0.961, 0.966, 0.977, 0.972, 0.967],
                [0.995, 0.999, 0.978, 0.954, 0.940, 0.948, 0.964, 0.985],
                [1.039, 1.042, 0.995, 0.945, 0.913, 0.921, 0.953, 1.004],
                [1.090, 1.091, 1.010, 0.936, 0.890, 0.898, 0.942, 1.025],
                [1.142, 1.141, 1.028, 0.926, 0.867, 0.873, 0.930, 1.039],
                [1.192, 1.188, 1.037, 0.916, 0.847, 0.852, 0.918, 1.054],
                [1.234, 1.226, 1.039, 0.903, 0.827, 0.833, 0.905, 1.064]])


angle8G = np.array([
    [102,  80, 57,   33,   9.4 , -11.4, -36,   -55],    # 0 mm
    [101,  80, 58,   35,   11  , -12.5, -37,   -56],    # 1 mm
    [100,  81, 60,   37,   11.7, -12.0, -38,   -58],    # 2 mm
    [101,  83, 63,   40,   13.5, -11.6, -40,   -60],    # 3 mm
    [99.6, 83, 64,   41,   13.6, -14.6, -42.5, -61.7],    # 4 mm
    [98.8, 83, 65.3, 42.6, 14.1, -15.5, -44.4, -62.5],    # 5 mm
    [99,   84, 67,   46.5, 15.3, -15.8, -45.8, -64] ])  # 6 mm


angle8G += 90
angle8G *= PI/180.0 # to radian

exp_data_8G = experimentalData(amp8G, p8G, angle8G)


# # #-------------------- 4 gratings



amp4G = np.array([[0.786441, 0.885087, 0.708722, 1],  # 0mm
                [0.707390, 0.903390, 0.716984, 1],  # 1mm
                [0.782744, 0.935068, 0.748444, 1],  # 2mm
                [0.828168, 0.952814, 0.747646, 1],  # 3mm
                [0.839347, 0.943083, 0.752176, 1],  # 4mm
                [0.836209, 0.898063, 0.742515, 1],  # 5mm
                [0.674446, 0.930514, 0.821491, 1]])  # 6mm

p4G = np.array([[1.568, 1.702, 1.841, 1.701],  # 0mm
                [1.622, 1.727, 1.811, 1.712],  # 1mm
                [1.777, 1.775, 1.728, 1.744],  # 2mm
                [1.921, 1.803, 1.659, 1.763],  # 3mm
                [2.052, 1.821, 1.599, 1.767],  # 4mm
                [2.177, 1.832, 1.544, 1.765],  # 5mm
                [2.189, 1.812, 1.532, 1.770]])  # 6m

angle4G = np.array([
    [88, 47, 0, -48],  # 1 mm
    [88, 47, 0, -48],  # 2 mm
    [87, 42, -0.4, -45],  # 3 mm
    [87, 40, -1, -43],  # 4 mm
    [87, 37, -2, -39.4],  # 5
    [86, 34.5, 0.7, -37],
    [87, 34.3,0.3, -36.5], ])  # 6

angle4G += 90
angle4G *= PI/180.0


amp4G = -amp4G*6

exp_data_4G = experimentalData(amp4G, p4G, angle4G)

# # #-------------------- 3 gratings


p3G = np.array([
                [0.785480299, 0.790931492, 0.776197530],
                [0.868729310, 0.791199141, 0.756219530],
                [0.944044033, 0.782008686, 0.736166689],
                [1.008789044, 0.770063749, 0.717855604],
                [1.062176737, 0.752845198, 0.700228121],
                [1.105367465, 0.736092842, 0.685809016]])


# amp3G = np.array([
#                 [1, 0.791027722, 0.788286368], #1 mm
#                 [1, 0.760074797, 0.856175719], #2 mm
#                 [1, 0.683595483, 0.759648587], #3 mm
#                 [1, 0.823589497, 0.892634750], #4 mm
#                 [1, 0.799191262, 0.860624538], #5 mm
#                 [0.929761080, 0.825496549, 1]]) #6 mm

amp3G = np.array([
    [1, 0.741027722, 0.898286368],  # 1 mm
    [1, 0.760074797, 0.856175719],  # 2 mm
    [1, 0.683595483, 0.759648587],  # 3 mm
    [1, 0.823589497, 0.892634750],  # 4 mm
    [1, 0.799191262, 0.860624538],  # 5 mm
    [0.929761080, 0.825496549, 1]])  # 6 mm

# angle3G = np.array([[1.46323095, -0.721939682, -0.305994888], #0 mm
#                 [-1.272312374, -0.662013114, -0.287649248], #1 mm
#                 [-1.207282583, -0.617224037, -0.266202903], #2 mm
#                 [-1.163960898, -0.576112689, -0.24190711], #3 mm
#                 [-1.132449255, -0.535046912, -0.213165041], #4 mm
#                 [-1.110707198, -0.494485147, -0.184534599], #5
#                 [-1.092253611, -0.45213532, -0.157502466] ]) #6

angle3G = np.array([
                    [96, 37, -23],  # 1 mm
                    [97, 33.4, -22],  # 2 mm
                    [98.4, 31.4, -20.4],  # 3 mm
                    [98, 28.9, -18.2],  # 4 mm
                    [98, 26.3, -18],  # 5
                    [98.7, 26, -16.8],])  # 6
angle3G += 90
angle3G *= PI/180.0

amp3G = -amp3G*3
#amp3G = -amp3G*0.017


exp_data_3G = experimentalData(amp3G, p3G, angle3G)


p2G = np.array([[0.74499963, 0.83835056],
                [0.84260799, 0.79162137],
                [0.93439329, 0.74978219],
                [1.01547901, 0.71495869],
                [1.09225748, 0.68570422],
                [1.15022428, 0.66215707],
                [1.18852386, 0.6460017]])

amp2G = np.array([[0.80572222, 1],  # 0 mm
                  [0.96185612, 1],  # 1 mm
                  [1, 0.88823016],  # 2 mm
                  [1, 0.86056905],  # 3 mm
                  [1, 0.06765155],  # 4 mm
                  [1, 0.54243293],  # 5 mm
                  [1, 0.55332888]])  # 6 mm

angle2G = np.array([[1.62207496, 0],  # 0 mm
                    [1.57328057, 0],  # 1 mm
                    [1.52791034, 0],  # 2 mm
                    [1.48305258, 0],  # 3 mm
                    [1.43953911, 0],  # 4 mm
                    [1.38942444, 0],  # 5 mm
                    [1.32692151, 0]])  # 6 mm

amp2G = 35*amp2G

exp_data_2G = experimentalData(amp2G, p2G, angle2G)
